<?php include 'header.php'; ?>
	<div class="box generalbox book_content"><h3>3 2-1.WordPressのテーマをカスタマイズするには？</h3>
		<div class="no-overflow">
		<section class="kiji">

  <p>
    デザインのカスタマイズは｢style.css｣を編集します｡
    具体的には､管理画面→ 外観→ テーマの編集 で編集し､その内容を[ファイルを更新]
    ボタンで保存します｡
    <br>
    <img src="mt01/theme01.png" alt="｢style.css｣を編集">
    <br>
ローカルで作業する場合はここから SublimeTextで開いて    
    編集してください
    
    <img src="mt01/theme001.png" alt="｢style.css｣を編集">
  </p>
  <p>
    このファイルは各テーマごとに存在しており､現在のテーマ<em>｢simplicity｣</em>にももちろんありますが､このファイルを直に編集するのはオススメしません｡
  </p>
  <p>
    ダウンロードしたテーマにはアップデートがあります､その際にオリジナルに書き換えた内容は全て初期化されてしまうため編集した内容はいずれ消えてしまいます｡
   <em>Simplicity2にはアップデートは無いので親テーマのままつくっても問題ありません</em>
    
  </p>
  <p>
    WordPressではこのための対策として<em>｢子テーマ｣</em>というものが用意されています｡
    <br>
  </p>
  <p>
    <br>
    子テーマというからには､親テーマなるものが存在しなければなりません｡
    <br>    親テーマになるのが､現在のsimplicityです｡
    <br>    子テーマは親のデザインをそのまま引き継ぎ､その後で独自にデザインしたところだけを上書きして描画します｡
    <br>    ですので実際には書き換えではなく､できあがっているデザインの気になるところだけを別のファルに書き足していく事になります｡
  </p>
  <p class="children">
    <em>親テーマ→   子テーマのイメージ</em>
    <br>
    <em>Simplicity</em>
    <em>Simplicity_child</em>
    <em>行数はわずか､模様がやや違うだけの子供</em>
  </p>
</section>

  <h3 id="4"><s>2-2.「simplicity」での子テーマの適用方法</s> ここは不要</h3>
<section class="kiji" style="opacity: .3">
  <p>
    実は､simplicityにはあらかじめ用意されている子テーマがあり､それをインストールすることで簡単に子テーマを作ることができます｡
    <br>

  </p>
  <p>
    ･ リンク先から以下のボタンをクリックしてください｡
    <br>
    <a href="http://wp-simplicity.com/downloads/child-theme/" target="blunk"> 
      <img src="lt02/kotheme01.png" alt="子テーマのダウンロード" style="width: 165px">
    </a>
      → <a href="lt02/simplicity-child20150920b.zip">直リンク「simplicity-child20150920b.zip」</a>
    <br>
  </p>
  <p>
    <br>
    Zipファイルのダウンロードができたら、WordPressのダッシュボード「外観」から「新しいテーマを追加」をクリックします。
  </p>
  <p>
    テーマを変えたらサイトを表示してみましょう｡
    <br>
    いくつかの項目が初期化されています｡
    <br>
    テーマ独自に用意されているカスタマイズの項目､つまり管理画面で行った設定はテーマが変わると引き継がれないものがあります｡
  </p>
  <p>
    <br>    一方で設定内容が引き継がれている部分も多くあります｡
    <br>    この違いはどこから来るのでしょうか｡
  </p>
  <p>
    Wordpressにもともと備わっていない機能､つまりテーマ独自の機能は引き継ぎできませんが､キャッチフレーズや投稿した記事､メニュー等の多くの機能はもともとWordpressが持っている機能なので､どのテーマに変わっても変化することはありません｡
  </p>

  <p>
    <em>Simplicityのウィジェット</em>
    <br>
    <img src="lt02/jisen06.png" alt="Simplicityのウィジェット">
  </p>
  <p>
    <em>デフォルト(初期の)テーマ 「Twenty Fifteen」のウィジェット</em>
    <br>
    <img src="lt02/jisen07.png" alt="「Twenty Fifteen」のウィジェット">
  </p>
</section>

  <h2 id="5">3.カスタマイズの実践</h2>
<section class="kiji">
  <p>
    変わってしまった設定を元に戻したら､まずはじめに上の方からカスタマイズしていきます｡
  </p>
  <p>
    修正作業は基本的に上から直したほうがやりやすいです｡
    <br>    なぜならWEBページはコードの上の方からブラウザに読み込まれて逐次描画されていきます｡
    <br>    これはスタイルシートつまりデザイン部分を担当する｢style.css｣についても同様です｡
    <br>    上から読み込まれて実行される､ということは<em>後から読み込まれたものが､コードの上の部分を上書きすることがある</em>ということです｡
  </p>
  <p>
    この考え方は非常に重要ですので覚えておきましょう｡
  </p>

  <h3 id="6">3-1.グローバルナビのデザインを変更する</h3>
  <p>    <br>
    では早速､グローバルメニューをこのように変えていきます｡
    <br>    <img src="mt01/wordpress-simplicity-custom02.png" alt="メニューのカスタマイズ後">
    <br>
    その前に｡このテーマのデザインはレスポンシブになってるので､<em>画面幅が1110px以下</em>になっているとこんな感じでメニューがボタン化されることを覚えていてください｡<br /><img src="lt02/simpli_m02.png" alt="" />
    <br>    また､同様に右サイドに出てくるナビゲーションも下の方に下がるか､表示されなくなるものもあります｡ 
    <!-- <img src="lt02/custom02-2.png" width="200" alt="メニューのカスタマイズ後"> -->
    <br>
    現時点との違いは､英語のメニューと2行になっているところと､左右のボーダーです｡
    <br>    これらは別々の機能で描画されています｡
    <br>    文字部分は､管理画面の外観→ メニューから､ボーダーは管理画面→ 外観→ テーマの編集からスタイルシートを編集して行います｡
    <br>    また､<em>日本語の文字サイズが小さい</em>ところにも注目して下さい｡
    <br>    フォントサイズを変えるにはそれなりの工夫が必要です｡
  </p>

  <div class="topics-container">
    <h2>レスポンシブデザインとは</h2>
    <p>      WEBページをデザインの変更だけでざまざまなデバイスに対応させること。
      <br>      つまりページそのものを複数作らずに、スタイルシート(CSSファイル)に画面サイズの条件分けを指定して
      <br>      最適な文字サイズやレイアウトにすること。
    </p>    <p>
      モバイルとPCのファイルを分けなくて済むので、作業量が少なくなります。
    </p>
  </div>

  <section class="kiji">
    <ol>
      <li>
        管理画面→ 外観→ メニュー と進んで下さい
        <br>
        <img src="lt02/jisen01.png" alt="メニュー構造">
        <br>
        ナビゲーションラベルをこのように編集して下さい｡

        <div class="topics-container">
          <h2>TOPICS タグとは</h2>
          <p>
            &lt;b&gt;は<b>太字</b>にしたい文字を囲む記号です｡これら記号は用途に応じて数多く用意されており､<em>タグ</em>と呼ばれています｡
          </p>
          <p>
            <br>            例えば､<u>下線</u>なら&lt;u&gt;で囲み､<i>イタリック</i>は&lt;i&gt;で､段落なら&lt;p&gt;です｡
            <br>            他にもたくさんありますが､いずれ&lt;b&gt;で始まったら閉じされるところまで<b>太字</b>が続きます｡閉じタグは&lt;/b&gt;です｡
            <br>            タグは開始タグと閉じタグがあり､webページはすべてこの構造で書かれています｡
          </p>
        </div>

      </li>
      <li>        すべての項目をこのようにしてください｡
        <br>        記号はすべて半角ですので注意して下さい｡
        <br>        <pre>&lt;b&gt;TOP PAGE&lt;/b&gt;トップページ
&lt;b&gt;MENU&lt;/b&gt;メニュー
&lt;b&gt;ACCESS&lt;/b&gt;アクセス
&lt;b&gt;CONTACT&lt;/b&gt;お問い合わせ
&lt;b&gt;CURRY MANIA&lt;/b&gt;カレーマニアがゆく
        </pre>
        <img src="lt02/jisen02.png" width="<6></6>50" alt="タグでメニュー">
        <br>
        修正がが済んだらヘッダーのナビゲーションにチェック<br>
         [メニューを保存]を押して､サイトを表示してみましょう｡
        <br>
      </li>
      <li>
        <i class="after"> </i>
        ･･･太字にはなりました｡
        <br>        <img src="lt02/jisen03.png" alt="メニュー構造">
      </li>
      <li>
        &lt;b&gt;は領域を太字にするだけです｡改行もされなければサイズが変わることもありません｡
        <br>
        次は､改行してみましょう｡
        <br>
        色､幅､線などデザイン部分を変更するには｢style.css｣を編集します｡ <em>管理画面→ 外観→ テーマの編集</em>
        <br>
        <img src="lt02/jisen04.png" alt="テーマの編集">
        <br>
        このままコピペして下さい｡
      </li>
      <pre>          #navi ul li a b{
              display: block;/*段落のような<a href="http://www.htmq.com/htmlkihon/005.shtml" target="blunk">ブロック要素</a>にする*/
              font-size: 1.3em; /*フォントサイズを標準の1.3倍に*/
          }
        </pre>
      <br>

      <div class="topics-container">
        <h2>TOPICS コメント文</h2>
        <p>
          /* ~ */ はコメント文の記述です｡
        </p>
        <p>
          #navi ul li a b の意味は､タグの囲みの構造のことで､bはaタグに囲まれていて､aはliに囲まれていて､さらにul #naviに囲まれています｡
          <br>
          囲まれている関係をスペースで区切って表しています｡
          <br>
          <br>
          &lt;b&gt;は本来改行されないタグなので、ナビメニュー以外のところでこのスタイルが適用されると困ります。
          <br>
          このため有効な範囲を狭める目的で<em>親タグ</em>(囲っているタグ)を指定しています。
        </p>
      </div>

      <br>
      [ファイルを更新]ボタンをクリックして､サイトを表示してださい｡
      <br>
      改行され､フォントサイズが大きくなりました｡
      <br>
      <img src="lt02/jisen05.png" alt="ブロック要素">
      <br>
      タグの囲みのイメージは､ブラウザの[ナビメニュー]のところで右クリック→要素を検証で確認できます｡
      <br>
      以下はクロームでの検証画面です｡
      <br>
      <img src="lt02/jisen12.png" alt="デベロッパーツール">
      <br>
      <li>
        次に文字の色を変えてみましょう｡
        <br>
        先ほど貼り付けたコードの下､閉じカッコの } より下に貼り付けてください｡
        <br>
        <em>※スタイルの貼り付け場所は、特に指示がなければ最終行です。</em>
        <pre>          #navi ul li a {
            color: #523300; /* フォントカラーの変更*/
           
           
           }
        </pre>
<br>
        [ファイルを更新]ボタンをクリックして､サイトを表示してださい｡
        <br>
        <br>        更にメニューのリンク文字のところで､右クリック→検証､もしくは要素を検査をクリックするとこのようなツールが表示されると思います｡
        <br>        クロームブラウザの場合は色マークをクリックするとカラーパレットが表示されます｡
        <br>        このツールはエラーの検証や表示テストをするのにとても便利です｡
        <br>        <div class="topics-container">
          <h2>TOPICS 色コード指定</h2>
          文字色はcolorで指定します｡ #以降の6桁数字は色指定で､先頭から2桁ずつR,G,Bの3原色を表しています｡
          <br>          数字は0~9~A~Fの16進数で､大きいほど明るくなります｡

        </div>

        <br>        <a href="https://ferret-plus.com/1880">Chromeデベロッパー・ツール（要素を検証）の基礎的な使い方</a>

      </li>
      <li>        次は日本語文字列が､英字に対して中央寄せになるように､また左右にボーダーを表示してみましょう｡
        <br>        先ほどの中括弧{ }の中に追加して下さい｡
        <pre>        
    #navi ul li a {
      color: #523300; /* フォントカラーの変更*/
      text-align: center;  /*文字の中央寄せ*/
      border-left: dotted 1px #523300; 
            <span>/*左側に点線､幅は1ピクセル､色は文字と同じ*/</span>
     }
        </pre>
        <br>
        <i class="after"> </i>表示してみましょう｡
        <br>
        <img src="lt02/jisen09.png" alt="左右にボーダー">
        <br>

        ulタグは箇条書きの始まりを意味し､liはその一行の意味です｡
        <br>
        また､aタグはリンク文字を意味します｡
        <br>
        このような基本タグも一応覚えておくといいでしょう｡
        <br>
        <div class="topics-container">
          <h2>#で始まる要素はタグにつけるID名</h2>
          #naviとはナビゲーションメニューを囲っている枠につけてあるID名です｡
          <br>
          IDなのでページないでは唯一の場所という意味で､naviは任意名です｡
          <br>
        </div>

      </li>

      <li>
        更にメニュー全体をこんな感じに右寄せにし､幅も均等に｡
        <br>
        ボーダーも一番右にはついていないのでなんとかしてみましょう｡<br>
        <img src="mt01/wordpress-simplicity-custom02.gif" alt="メニューのカスタマイズ後">
        <br>
        <br>
        <pre>      #navi ul &gt; li {
          width: 16%; /*幅を16%*/
          float: right; /*浮かせて右から配置する*/
      }
      
    </pre>
<br>        16%はブラウザ幅全体に対しての割合です｡5個あるので20%を超えると2行になってしまいます｡
        <br>
        floatはイメージ的には､紙面から浮かび上がると理解した方がいいでしょう｡
        <br>
        rightとしているので､コードの先に書かれたのもが画面右から順に配置されます｡
        <br>
        <br>
        <img src="lt02/jisen10.png" alt="フロートしたメニュー">
        <br>
        <br>
        順番が入れ替わってしまいました｡
        <br>
        TOP PAGEが先に書かれていたためです｡順番を直しましょう｡
        <br>
      </li>

      <li>
        管理画面→ 外観→ メニュー からメニューをドラックして順番を反対にして下さい｡
        <br>
        <img src="lt02/jisen11.png" alt="メニューをドラック">
        <br>
        順番が変わったので､最初の要素が一番右にあります｡
        <br>
        ただしコード的には上位に書かれているはずなので､ulタグの中の最初のliタグに右ボーダーをつけることになります｡
        <br>
        スタイルシートの一番下にコピペして下さい｡
        <pre>        #navi ul li a:first-child {
            border-right: dotted 1px #523300;
            
        }
      </pre>
        <br>
        &nbsp; &nbsp; &nbsp; &nbsp;  7.の見本通りになったかと思います｡
        <br>
        <div class="topics-container">
          <h2>TOPICS</h2>
          li:first-childはいくつかあるうちの最初のliのこと｡最後のliならもちろんli:last-child
          <br>
          :コロンの記号は､liタグのfirst-childという順位と結びつけるためのものです｡
          <br>
          <br>
          他にも:が登場していますが､{ }の中では width <em>:</em>16px → 幅<em>が</em>16ピクセル
          <br>
          のように日本語で言うと助詞の<em>「が」</em>の意味ですが､{ }の外では､<em>「の」</em>の意味です｡

        </div>
      </li>
      <li>
        最後にグローバルメニューに背景をつけてみます。
        <br>
        外観→ テーマの編集 で スタイルシート (style.css)を開いて､幅も均等に｡ 
        <br>
        以下を貼り付けて更新してください。
        <pre>         #navi{background: #e4e4cc;}
      </pre>
        <i class="after"> </i>更新して、サイトを確認しましょう。
        <br>
        <img src="lt02/jisen13.png" alt="グローバルメニューに背景">
      </li>
    </ol>
  </section>
      <a href="" onclick="scrollToTop(); return false">トップに戻る</a>
</section></div></div>
</body>
</html>